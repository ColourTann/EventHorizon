package game.module.utility;

import game.assets.Gallery;
import game.card.Card;
import game.card.CardCode.AI;
import game.card.CardCode.Augment;
import game.card.CardCode.Special;
import game.module.Module.ModuleType;
import game.module.component.Component;
import util.image.Pic;

public class Exploiter extends Utility{
	boolean preventScramble=true;
	public Exploiter(int tier) {
		super(tier, ModuleType.UTILITY, "Exploiter", "Your ship is immune to the first scramble each turn", Gallery.blaster, 1, 1);
		
		for(int i=0;i<2;i++) cardPic[i]= Gallery.exploiter[i];
		
		name[0]="Snag";
		cost[0]=0;
		effect[0]=0;
		rules[0]="Scramble chosen system";
		code[0].add(Special.ModuleChooser);
		code[0].add(Special.ChooseEnemyModule);
		code[0].add(Special.ScrambleChosenModule, 1);	
		
		
		name[1]="Entangle";
		cost[1]=2;
		effect[1]=0;
		rules[1]="Scramble chosen system twice";
		code[1].add(Special.ModuleChooser);
		code[1].add(Special.ChooseEnemyModule);
		code[1].add(Special.ScrambleChosenModule, 2);	
		code[1].add(AI.Ignore);
	
		cardType=ModuleType.UTILITY;
		
		overridePowerLevel=calc(0);
	}

	@Override
	public void startBattleEffect() {
	}

	@Override
	public void beginTurnEffect() {
		preventScramble=true;
	}

	@Override
	public void endTurnEffect() {
	}

	@Override
	public void playCardEffect(Card c) {
	}

	@Override
	public int getBonusEffect(Card c, int baseEffect) {
		return 0;
	}

	@Override
	public int getBonusShots(Card c, int baseShots) {
		return 0;
	}

	@Override
	public void afterBattle() {
	}

	@Override
	public int getBonusCost(Card c, int baseCost) {
		return 0;
	}

	@Override
	public boolean overrideDefeat() {
		return false;
	}

	@Override
	public void onScramble(Component c) {
		if(preventScramble){
			c.removeSramble();
			preventScramble=false;
		}
	}

}
